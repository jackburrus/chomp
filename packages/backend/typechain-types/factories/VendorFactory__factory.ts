/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { VendorFactory, VendorFactoryInterface } from "../VendorFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_funds",
        type: "uint256",
      },
    ],
    name: "createVendor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVendors",
    outputs: [
      {
        internalType: "contract Vendor[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "list_of_vendors",
    outputs: [
      {
        internalType: "contract Vendor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634c763e441461004657806364bebcc51461006257806391452ef414610080575b600080fd5b610060600480360381019061005b919061031f565b6100b0565b005b61006a6101ac565b604051610077919061046d565b60405180910390f35b61009a6004803603810190610095919061048f565b61023a565b6040516100a791906104cb565b60405180910390f35b81816040516100be90610279565b6100c9929190610504565b604051809103906000f0801580156100e5573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561023057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116101e6575b5050505050905090565b6001818154811061024a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103628061052e83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102b68261028b565b9050919050565b6102c6816102ab565b81146102d157600080fd5b50565b6000813590506102e3816102bd565b92915050565b6000819050919050565b6102fc816102e9565b811461030757600080fd5b50565b600081359050610319816102f3565b92915050565b6000806040838503121561033657610335610286565b5b6000610344858286016102d4565b92505060206103558582860161030a565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b60006103b06103ab6103a68461028b565b61038b565b61028b565b9050919050565b60006103c282610395565b9050919050565b60006103d4826103b7565b9050919050565b6103e4816103c9565b82525050565b60006103f683836103db565b60208301905092915050565b6000602082019050919050565b600061041a8261035f565b610424818561036a565b935061042f8361037b565b8060005b8381101561046057815161044788826103ea565b975061045283610402565b925050600181019050610433565b5085935050505092915050565b60006020820190508181036000830152610487818461040f565b905092915050565b6000602082840312156104a5576104a4610286565b5b60006104b38482850161030a565b91505092915050565b6104c5816103c9565b82525050565b60006020820190506104e060008301846104bc565b92915050565b6104ef816102ab565b82525050565b6104fe816102e9565b82525050565b600060408201905061051960008301856104e6565b61052660208301846104f5565b939250505056fe608060405234801561001057600080fd5b506040516103623803806103628339818101604052810190610032919061015b565b8060008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061019b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f2826100c7565b9050919050565b610102816100e7565b811461010d57600080fd5b50565b60008151905061011f816100f9565b92915050565b6000819050919050565b61013881610125565b811461014357600080fd5b50565b6000815190506101558161012f565b92915050565b60008060408385031215610172576101716100c2565b5b600061018085828601610110565b925050602061019185828601610146565b9150509250929050565b6101b8806101aa6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638da5cb5b14610046578063d5f3948814610064578063d6b82fe314610082575b600080fd5b61004e6100a0565b60405161005b9190610133565b60405180910390f35b61006c6100c6565b6040516100799190610133565b60405180910390f35b61008a6100ec565b6040516100979190610167565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011d826100f2565b9050919050565b61012d81610112565b82525050565b60006020820190506101486000830184610124565b92915050565b6000819050919050565b6101618161014e565b82525050565b600060208201905061017c6000830184610158565b9291505056fea26469706673582212206e98b935e6feb189b8765b96dedb8fa3125ab2c77bfa33b4d84e91ca749c271b64736f6c634300080a0033a2646970667358221220d1447af75b3920c00d3d1a41361c307530240e4238b692fe7c09dd801d7e46ea64736f6c634300080a0033";

type VendorFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VendorFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VendorFactory__factory extends ContractFactory {
  constructor(...args: VendorFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VendorFactory> {
    return super.deploy(overrides || {}) as Promise<VendorFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VendorFactory {
    return super.attach(address) as VendorFactory;
  }
  override connect(signer: Signer): VendorFactory__factory {
    return super.connect(signer) as VendorFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VendorFactoryInterface {
    return new utils.Interface(_abi) as VendorFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VendorFactory {
    return new Contract(address, _abi, signerOrProvider) as VendorFactory;
  }
}
